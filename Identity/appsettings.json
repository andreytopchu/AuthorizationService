{
  "AuthorizationSettings": {
    "AuthorityUrl": "https://localhost:5001",
    "ApiResource": "s.identity",
    "ApiResourceSecret": "84C2198A-20DF-4647-8308-124BB6EF2093",
    "IntrospectionCacheTimeSeconds": 30,
    "ApiScopeRequired": [
      "identity-api"
    ],
    "ApiScopeOnlyRequired": [
      "identity-api"
    ],
    "ApiPolicies": [
      "fullAccess",
      "apiResource.read",
      "apiResource.write",
      "client.read",
      "client.write",
      "user.read",
      "user.write",
      "role.read",
      "role.write",
      "policy.read",
      "policy.write"
    ],
    "UseReferenceToken": true
  },
  "ConnectionStrings": {
    "DefaultConnection": "Server=127.0.0.1;Port=5432;User Id=postgres;Password=my_pass;Database=Identity;Pooling=true;ConnectionIdleLifetime=300;MinPoolSize=15;MaxPoolSize=100;CommandTimeout=10;Timeout=5;",
    "SecurityProviderConnection": "Server=127.0.0.1;Port=5432;User Id=postgres;Password=my_pass;Database=IdentityTokenProvider;Pooling=true;ConnectionIdleLifetime=300;MinPoolSize=15;MaxPoolSize=100;CommandTimeout=10;Timeout=5;"
  },
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Console"
    ],
    "MinimumLevel": "Information",
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "formatter": "Elastic.CommonSchema.Serilog.EcsTextFormatter, Elastic.CommonSchema.Serilog",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ]
  },
  "TokenOptions": {
    "InviteTokenLifeDays": "07:00:00:00",
    "ForgotTokenLifeDays": "01:00:00"
  },
  "EmailOptions": {
    "FromEmail": "test@test.test",
    "SmtpLogin": "testLogin",
    "Password": "testpass",
    "Host": "base.host",
    "Port": 1,
    "AttemptCount": 3,
    "From": "Identity"
  },
  "TokenProviderOptions": {
    "ApiResource": "s.identity"
  }
}